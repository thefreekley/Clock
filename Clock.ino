#define CS_SLED 10
#define DIN_SLED 11
#define CLK_SLED 12

#define PHOTORESISTOR A2

#define BUTTON_UP 4
#define BUTTON_DOWN 6

#define SDA_RTC 3
#define SCL_RTC 9

#define LED 5

#define DHTPIN 2

#define pin_SW_SDA 3                                    
#define pin_SW_SCL 9 

//**********************LIBRARARY***************************//

#include "DHT.h"
#define DHTTYPE DHT11 
DHT dht(DHTPIN, DHTTYPE);

#include <BME280I2C.h>
#include <Wire.h>
BME280I2C bme;

#include <iarduino_RTC.h>                                  
iarduino_RTC time(RTC_DS3231);  

#include "LedControlMS.h"
LedControl lc=LedControl(12,11,10,8);
//****************PROGRAM**********************************//
class Display{
private:
char *value;
int H_acom,V_acom;
public:
Display(char *value,int H_acom,int V_acom){
 this->H_acom=H_acom;
 this->V_acom=V_acom;
}
  
};

byte SmallNumber[10][6]{
{B11100000,B10100000,B10100000,B10100000,B10100000,B11100000}, //0
{B01000000,B01000000,B01000000,B01000000,B01000000,B01000000}, //1
{B11100000,B00100000,B11100000,B10000000,B10000000,B11100000}, //2
{B11100000,B00100000,B11100000,B00100000,B00100000,B11100000}, //3
{B10100000,B10100000,B10100000,B11100000,B00100000,B00100000}, //4
{B11100000,B10000000,B11100000,B00100000,B00100000,B11100000}, //5
{B11100000,B10000000,B11100000,B10100000,B10100000,B11100000}, //6
{B11100000,B00100000,B00100000,B00100000,B00100000,B00100000}, //7
{B11100000,B10100000,B11100000,B10100000,B10100000,B11100000},  //8
{B11100000,B10100000,B11100000,B00100000,B00100000,B11100000} //9
};

byte BigNumber[10][2][8]{
    {
{B01100110,B01100110,B01100110,B01100110,B01100110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B01100110,B01100110,B01100110,B01100110,B01100110} //0
  },
    {
{B00011000,B00011000,B00011000,B00011000,B00011000,B00011000,B00011000,B00000000},
{B00000000,B00011000,B00011000,B00011000,B00011000,B00011000,B00011000,B00011000}//1
  },
  {
{B01111110,B01100000,B01100000,B01100000,B01100000,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B00000110,B00000110,B00000110,B00000110,B01111110} //2
  },
    {
{B01111110,B00000110,B00000110,B00000110,B00000110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B00000110,B00000110,B00000110,B00000110,B01111110} //3
  },
   {
{B01111110,B01111110,B00000110,B00000110,B00000110,B00000110,B00000110,B00000000},
{B00000000,B01100110,B01100110,B01100110,B01100110,B01100110,B01100110,B01100110}//4
  },
    {
{B01111110,B00000110,B00000110,B00000110,B00000110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B01100000,B01100000,B01100000,B01100000,B01111110} //5
  },
    {
{B01111110,B01100110,B01100110,B01100110,B01100110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B01100000,B01100000,B01100000,B01100000,B01111110} //6
  },
    {
{B00000110,B00000110,B00000110,B00000110,B00000110,B00000110,B00000110,B00000000},
{B00000000,B01111110,B01111110,B00000110,B00000110,B00000110,B00000110,B00000110}//7
  },
  {
{B01111110,B01100110,B01100110,B01100110,B01100110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B01100110,B01100110,B01100110,B01100110,B01111110} //8
  },
 {
{B01111110,B00000110,B00000110,B00000110,B00000110,B01111110,B01111110,B00000000},
{B00000000,B01111110,B01111110,B01100110,B01100110,B01100110,B01100110,B01111110} //9
  } 
};


void setup(){
  dht.begin();
  Serial.begin(9600);
  Wire.begin();
  bme.begin();
  time.begin(); 
  
  for(int i=0;i<8;i++){
  lc.shutdown(i,false);
  lc.setIntensity(i,8);
  lc.clearDisplay(i);
  }
  
}



void loop(){
  int h = dht.readHumidity();
  int t = dht.readTemperature();


   float temp(NAN), hum(NAN), pres(NAN);
   BME280::TempUnit tempUnit(BME280::TempUnit_Celsius);
   BME280::PresUnit presUnit(BME280::PresUnit_Pa);
   bme.read(pres, temp, hum, tempUnit, presUnit);
   for(int i=0;i<10;i++){
    for(int g=0;g<6;g++){
    lc.setRow(0,g,SmallNumber[i][g]);
    }
    Serial.println(i);
    delay(1000);
   }
    /*
  time.Hours
  time.minutes
  time.seconds
  time.day
  time.weekday
  time.month
  time.year
    */
}
