smiles[5][8]{
  {
    {B00000000,B00000000,B01110111,B01000100,B00000000,B00111000,B00101000,B00000000},
    {B00000000,B00000000,B01110111,B00100010,B00000000,B00011100,B00010100,B00000000},
    {B00000000,B00000000,B01110111,B00010001,B00000000,B00001110,B00001010,B00000000},
  },
  {

  {
    {B01100110,B01100110,B01100110,B00000000,B00000000,B00000000,B00111100,B01000010},
    {B10000001,B01000010,B00100100,B00011000,B00011000,B00100100,B01000010,B10000001},
    {B11100111,B01000010,B01000010,B00000000,B00000000,B00000000,B00111100,B01000010},
  }
}


void GoodSmile(int matrix){
  ArrGoodSmile[7][8]{
   {B00010000,B01010000,B00110000,B01011100,B00110100,B00011100,B00011000,B00011000}, //ok
  {B00000000,B01111100,B01000000,B01000000,B01111100,B01000100,B01000100,B01111100}, //baldej
  {B00000000,B01111100,B01000100,B01000100,B01111100,B01000100,B01000100,B01000100},
  {B00000000,B01111100,B01000100,B01000100,B01000100,B01000100,B01000100,B01000100},
  {B00000000,B00111000,B00101000,B00101000,B00101000,B00101000,B01111100,B01000100},
  {B00000000,B01111100,B01000000,B01000000,B01111100,B01000000,B01000000,B01111100},
  {B00000000,B01010100,B01010100,B00111000,B00010000,B00111000,B01010100,B01010100},
  }
  };
  static unsigned long GoodSmileMillis=0;
  static unsigned int GoodSmilePeriod=0;
  if(millis()-GoodSmileMillis>100){
    if(GoodSmilePeriod>100)GoodSmilePeriod=0;
    else GoodSmilePeriod++;
  }
  if(GoodSmilePeriod<8){
    for(int i=(7-GoodSmilePeriod);i<8;i++){lc.setRow(matrix,i,ArrGoodSmile[0][i]);}
  }
  else if(GoodSmilePeriod>46 && GoodSmilePeriod<46+8){
    for(int i=46-GoodSmilePeriod;i<8;i++){lc.setRow(matrix,i,ArrGoodSmile[0][i+1]);}
  }
  switch(GoodSmilePeriod){
  case for(int i=0;i<8;i++){lc.setRow(matrix,i,
  }
}
